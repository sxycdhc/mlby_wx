<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mlby.dao.NewsMapper" >
  <resultMap id="BaseResultMap" type="com.mlby.pojo.News" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="new_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="new_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="new_neirong" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    id, new_id, new_name, new_neirong, user_name, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mlby_news
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mlby_news
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mlby.pojo.News" >
    insert into mlby_news (id, new_id, new_name, 
      new_neirong, user_name, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{newId,jdbcType=INTEGER}, #{newName,jdbcType=VARCHAR}, 
      #{newNeirong,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.mlby.pojo.News" >
    insert into mlby_news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="newId != null" >
        new_id,
      </if>
      <if test="newName != null" >
        new_name,
      </if>
      <if test="newNeirong != null" >
        new_neirong,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="newId != null" >
        #{newId,jdbcType=INTEGER},
      </if>
      <if test="newName != null" >
        #{newName,jdbcType=VARCHAR},
      </if>
      <if test="newNeirong != null" >
        #{newNeirong,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mlby.pojo.News" >
    update mlby_news
    <set >
      <if test="newId != null" >
        new_id = #{newId,jdbcType=INTEGER},
      </if>
      <if test="newName != null" >
        new_name = #{newName,jdbcType=VARCHAR},
      </if>
      <if test="newNeirong != null" >
        new_neirong = #{newNeirong,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mlby.pojo.News" >
    update mlby_news
    set new_id = #{newId,jdbcType=INTEGER},
      new_name = #{newName,jdbcType=VARCHAR},
      new_neirong = #{newNeirong,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>